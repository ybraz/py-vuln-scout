{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/py-vuln-scout/schemas/llm_rule.schema.json",
  "title": "LLM Rule Schema",
  "description": "Schema for LLM-based vulnerability detection rules",
  "type": "object",
  "required": ["id", "cwe_id", "goal", "detection_prompt_template", "evidence_format"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the rule",
      "pattern": "^CWE-[0-9]+\\.(regex|llm)\\.[0-9]+$",
      "examples": ["CWE-79.llm.001"]
    },
    "name": {
      "type": "string",
      "description": "Short name for the rule"
    },
    "cwe_id": {
      "type": "string",
      "description": "CWE identifier",
      "pattern": "^CWE-[0-9]+$",
      "examples": ["CWE-79"]
    },
    "goal": {
      "type": "string",
      "description": "Clear objective of this detector",
      "examples": ["Detect reflected/stored XSS in Flask/Django/Jinja2"]
    },
    "detection_prompt_template": {
      "type": "string",
      "description": "Jinja2 template for the detection prompt. Available variables: file_path, code, ast_json, hints, sources, sinks, max_tokens"
    },
    "evidence_format": {
      "type": "object",
      "required": ["vulnerable", "reason", "evidence", "confidence"],
      "description": "Required structure for LLM output (strict JSON format)",
      "properties": {
        "vulnerable": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["boolean"]
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "reason": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["string"]
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "evidence": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["array"]
            },
            "description": {
              "type": "string"
            },
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["object"]
                },
                "required": {
                  "type": "array",
                  "items": {"type": "string"}
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          },
          "required": ["type"]
        },
        "confidence": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["number"]
            },
            "minimum": {
              "type": "number"
            },
            "maximum": {
              "type": "number"
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "type": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["string"]
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "sanitization_absent": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["boolean"]
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        },
        "proposed_payloads": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["array"]
            },
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["string"]
                }
              }
            },
            "description": {
              "type": "string"
            }
          },
          "required": ["type"]
        }
      }
    },
    "model_params": {
      "type": "object",
      "properties": {
        "temperature": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 2.0,
          "default": 0.0
        },
        "max_output_tokens": {
          "type": "integer",
          "minimum": 1,
          "default": 512
        }
      }
    },
    "references": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri"
      }
    },
    "examples": {
      "type": "object",
      "properties": {
        "positive": {
          "type": "array",
          "items": {"type": "string"}
        },
        "negative": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    }
  }
}
